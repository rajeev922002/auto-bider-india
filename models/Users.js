const mongoose = require("mongoose");

const UsersSchema = mongoose.Schema(
  {
    id: String,
    username: String,
    password: String,
    displayName: String,
    publicName: String,
    location: Object,
    freelancer_status: Object,
    primary_currency: Object,
    name: { type: String },
    primary_language: String,
    timezone: Object,
    age: Number,
    gender: String,
    username: { type: String },
    email: { type: String },
    profilePicture: { type: String },
    skype: { type: String },
    telegram: { type: String },
    phone: { type: String },
    role: { type: String },
    password: { type: String },
    token: { type: Object },
    tokenExpirationDate: Date,
    access_token: String,
    refresh_token: String,
    skills: [String],
    show_excluded_skills: Boolean,
    excluded_skills: [String],
    hide_skills: [String],
    excluded_countries: [String],
    payment_verified: String,
    email_verified: String,
    deposit_made: String,
    rating: String,
    projects: String,
    minimum_budget_hourly: String,
    minimum_budget_fixed: String,
    higher_bid_range: String,
    lower_bid_range: String,
    bidsAllow: Number,
    trial: Boolean,
    autoBid: Boolean,
    aiBid: Boolean,
    timeInterval: Number,
    timeLimit: Number,
    bidsLimit: Number,
    bidStartTime: { type: Date},
    bidEndTime: { type: Date},
    breakTime: { type: Date},
    //for admin purposes

    subscriptionType: { type: String, enum: ['trial', 'monthly', 'semi-annual', 'annual','not-subscribed'] },
    subscriptionStartDate: { type: Date },
    subscriptionEndDate: { type: Date },
    isLocked: { type: Boolean, default: false },
    isAdmin: { type: Boolean, default: false },
    lockReason: { type: String },
  },
  { timestamps: true }
);

module.exports = mongoose.model("Users", UsersSchema);
